import{_ as i,c as a,o as n,ae as t}from"./chunks/framework.Bw7rlmih.js";const g=JSON.parse('{"title":"Configuration Options","description":"","frontmatter":{},"headers":[],"relativePath":"reference/config.md","filePath":"reference/config.md"}'),e={name:"reference/config.md"};function l(h,s,p,r,o,k){return n(),a("div",null,s[0]||(s[0]=[t(`<h1 id="configuration-options" tabindex="-1">Configuration Options <a class="header-anchor" href="#configuration-options" aria-label="Permalink to &quot;Configuration Options&quot;">​</a></h1><p>Comprehensive reference for all Konfigo configuration options, environment variables, and behavioral settings.</p><h2 id="command-line-configuration" tabindex="-1">Command-Line Configuration <a class="header-anchor" href="#command-line-configuration" aria-label="Permalink to &quot;Command-Line Configuration&quot;">​</a></h2><h3 id="source-file-discovery" tabindex="-1">Source File Discovery <a class="header-anchor" href="#source-file-discovery" aria-label="Permalink to &quot;Source File Discovery&quot;">​</a></h3><p>Konfigo uses the following order to discover configuration files:</p><ol><li><strong>Explicit paths</strong> specified with <code>-s</code> flag</li><li><strong>Current directory</strong> search for common config files</li><li><strong>Recursive discovery</strong> with <code>-r</code> flag (searches subdirectories)</li><li><strong>Environment variable paths</strong> from <code>KONFIGO_CONFIG_PATH</code></li></ol><h3 id="default-file-patterns" tabindex="-1">Default File Patterns <a class="header-anchor" href="#default-file-patterns" aria-label="Permalink to &quot;Default File Patterns&quot;">​</a></h3><p>When no explicit sources are provided, Konfigo searches for:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>config.{json,yaml,yml,toml,env}</span></span>
<span class="line"><span>app.{json,yaml,yml,toml,env}</span></span>
<span class="line"><span>konfigo.{json,yaml,yml,toml,env}</span></span>
<span class="line"><span>.env</span></span></code></pre></div><h3 id="case-sensitivity" tabindex="-1">Case Sensitivity <a class="header-anchor" href="#case-sensitivity" aria-label="Permalink to &quot;Case Sensitivity&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Flag</th><th>Behavior</th><th>Use Case</th></tr></thead><tbody><tr><td>Default</td><td>Case-insensitive key matching</td><td>Most common usage</td></tr><tr><td><code>-c</code></td><td>Case-sensitive key matching</td><td>Strict configuration requirements</td></tr></tbody></table><p><strong>Example</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># These keys are treated as the same (default)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;Database&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {...}}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {&quot;database&quot;:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {...}}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> merged</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># With -c flag, these remain separate</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;Database&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {...}}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {&quot;database&quot;:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {...}}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> both</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> preserved</span></span></code></pre></div><h2 id="environment-variable-configuration" tabindex="-1">Environment Variable Configuration <a class="header-anchor" href="#environment-variable-configuration" aria-label="Permalink to &quot;Environment Variable Configuration&quot;">​</a></h2><h3 id="configuration-overrides" tabindex="-1">Configuration Overrides <a class="header-anchor" href="#configuration-overrides" aria-label="Permalink to &quot;Configuration Overrides&quot;">​</a></h3><p>Override any configuration key using the <code>KONFIGO_KEY_</code> prefix:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Override nested configuration</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KONFIGO_KEY_app.port</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8080</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KONFIGO_KEY_database.host</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">prod-db.company.com</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KONFIGO_KEY_features.auth.enabled</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Override array elements (replaces entire array)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KONFIGO_KEY_tags</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;[&quot;production&quot;, &quot;critical&quot;]&#39;</span></span></code></pre></div><h3 id="schema-variables" tabindex="-1">Schema Variables <a class="header-anchor" href="#schema-variables" aria-label="Permalink to &quot;Schema Variables&quot;">​</a></h3><p>Define variables for schema processing:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># High-priority schema variables</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KONFIGO_VAR_ENVIRONMENT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">production</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KONFIGO_VAR_DATABASE_PASSWORD</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">secret123</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KONFIGO_VAR_API_ENDPOINT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">https://api.company.com</span></span></code></pre></div><h3 id="system-configuration" tabindex="-1">System Configuration <a class="header-anchor" href="#system-configuration" aria-label="Permalink to &quot;System Configuration&quot;">​</a></h3><p>Control Konfigo&#39;s behavior:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Logging level</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KONFIGO_LOG_LEVEL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DEBUG    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ERROR, WARN, INFO, DEBUG</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Default search paths</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KONFIGO_CONFIG_PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/etc/konfigo:/usr/local/konfigo</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Disable colored output</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NO_COLOR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Force specific locale for parsing</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LC_ALL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">C</span></span></code></pre></div><h2 id="schema-configuration" tabindex="-1">Schema Configuration <a class="header-anchor" href="#schema-configuration" aria-label="Permalink to &quot;Schema Configuration&quot;">​</a></h2><h3 id="schema-file-structure" tabindex="-1">Schema File Structure <a class="header-anchor" href="#schema-file-structure" aria-label="Permalink to &quot;Schema File Structure&quot;">​</a></h3><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">v1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Schema metadata</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;my-config-schema&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1.0.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  description</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Production configuration schema&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Input validation (before processing)</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">inputSchema</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./schemas/input-validation.json&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  strict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Allow extra keys not in schema</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Output filtering (after processing)</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">outputSchema</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./schemas/output-structure.json&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  strict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # Only include keys from schema</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Protected configuration paths</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">immutable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;app.name&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;security.keys&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;database.credentials.username&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Variable definitions</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">vars</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ENVIRONMENT&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;production&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    description</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Deployment environment&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;DATABASE_HOST&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;prod-db.company.com&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    description</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Primary database hostname&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Data generation</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">generators</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;uuid&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    targetPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;app.instanceId&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;timestamp&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    targetPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;metadata.generated&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    format</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2006-01-02T15:04:05Z07:00&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Data transformation</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;renameKey&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;old.config.path&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    to</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;new.config.path&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;setValue&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;metadata.processed&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Data validation</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">validate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;app.port&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    rules</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      required</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;number&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      min</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1024</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      max</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">65535</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;environment&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    rules</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      required</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;string&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      enum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;development&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;staging&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;production&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><h2 id="processing-configuration" tabindex="-1">Processing Configuration <a class="header-anchor" href="#processing-configuration" aria-label="Permalink to &quot;Processing Configuration&quot;">​</a></h2><h3 id="merge-behavior" tabindex="-1">Merge Behavior <a class="header-anchor" href="#merge-behavior" aria-label="Permalink to &quot;Merge Behavior&quot;">​</a></h3><h4 id="object-merging" tabindex="-1">Object Merging <a class="header-anchor" href="#object-merging" aria-label="Permalink to &quot;Object Merging&quot;">​</a></h4><ul><li><strong>Deep merge</strong>: Objects are combined recursively</li><li><strong>Key precedence</strong>: Later sources override earlier sources</li><li><strong>Null handling</strong>: Explicit null values override previous values</li></ul><h4 id="array-handling" tabindex="-1">Array Handling <a class="header-anchor" href="#array-handling" aria-label="Permalink to &quot;Array Handling&quot;">​</a></h4><ul><li><strong>Complete replacement</strong>: Arrays are replaced entirely, not merged</li><li><strong>No element merging</strong>: Individual array elements are not combined</li></ul><h4 id="primitive-values" tabindex="-1">Primitive Values <a class="header-anchor" href="#primitive-values" aria-label="Permalink to &quot;Primitive Values&quot;">​</a></h4><ul><li><strong>Direct replacement</strong>: Strings, numbers, booleans are replaced completely</li></ul><h3 id="precedence-order" tabindex="-1">Precedence Order <a class="header-anchor" href="#precedence-order" aria-label="Permalink to &quot;Precedence Order&quot;">​</a></h3><ol><li><strong>Environment variables</strong> (<code>KONFIGO_KEY_*</code>) - Highest precedence</li><li><strong>Later source files</strong> (rightmost in <code>-s</code> list)</li><li><strong>Earlier source files</strong> (leftmost in <code>-s</code> list)</li><li><strong>Stdin input</strong> - Lowest precedence</li></ol><h3 id="schema-processing-order" tabindex="-1">Schema Processing Order <a class="header-anchor" href="#schema-processing-order" aria-label="Permalink to &quot;Schema Processing Order&quot;">​</a></h3><ol><li><strong>Input validation</strong> (if <code>inputSchema</code> specified)</li><li><strong>Variable substitution</strong> (from <code>vars</code> and <code>KONFIGO_VAR_*</code>)</li><li><strong>Data generation</strong> (from <code>generators</code>)</li><li><strong>Data transformation</strong> (from <code>transform</code>)</li><li><strong>Data validation</strong> (from <code>validate</code>)</li><li><strong>Output filtering</strong> (if <code>outputSchema</code> specified)</li></ol><h2 id="output-configuration" tabindex="-1">Output Configuration <a class="header-anchor" href="#output-configuration" aria-label="Permalink to &quot;Output Configuration&quot;">​</a></h2><h3 id="format-detection" tabindex="-1">Format Detection <a class="header-anchor" href="#format-detection" aria-label="Permalink to &quot;Format Detection&quot;">​</a></h3><p>Output format is determined by:</p><ol><li><strong>Explicit format flags</strong> (<code>-oj</code>, <code>-oy</code>, <code>-ot</code>, <code>-oe</code>)</li><li><strong>Output file extension</strong> (when using <code>-of</code>)</li><li><strong>Default to JSON</strong> (when outputting to stdout)</li></ol><h3 id="format-specific-options" tabindex="-1">Format-Specific Options <a class="header-anchor" href="#format-specific-options" aria-label="Permalink to &quot;Format-Specific Options&quot;">​</a></h3><h4 id="json-output" tabindex="-1">JSON Output <a class="header-anchor" href="#json-output" aria-label="Permalink to &quot;JSON Output&quot;">​</a></h4><ul><li><strong>Pretty printing</strong>: Enabled by default</li><li><strong>Compact mode</strong>: Not available (use external tools like <code>jq -c</code>)</li></ul><h4 id="yaml-output" tabindex="-1">YAML Output <a class="header-anchor" href="#yaml-output" aria-label="Permalink to &quot;YAML Output&quot;">​</a></h4><ul><li><strong>Indentation</strong>: 2 spaces (standard)</li><li><strong>Flow style</strong>: Block style for readability</li><li><strong>Comments</strong>: Not preserved in conversion</li></ul><h4 id="toml-output" tabindex="-1">TOML Output <a class="header-anchor" href="#toml-output" aria-label="Permalink to &quot;TOML Output&quot;">​</a></h4><ul><li><strong>Table organization</strong>: Automatic based on structure</li><li><strong>Array formatting</strong>: Multi-line for readability</li></ul><h4 id="env-output" tabindex="-1">ENV Output <a class="header-anchor" href="#env-output" aria-label="Permalink to &quot;ENV Output&quot;">​</a></h4><ul><li><strong>Key flattening</strong>: Nested keys use dot notation</li><li><strong>Value quoting</strong>: Automatic based on content</li><li><strong>Comment preservation</strong>: Not supported</li></ul><h2 id="performance-configuration" tabindex="-1">Performance Configuration <a class="header-anchor" href="#performance-configuration" aria-label="Permalink to &quot;Performance Configuration&quot;">​</a></h2><h3 id="memory-management" tabindex="-1">Memory Management <a class="header-anchor" href="#memory-management" aria-label="Permalink to &quot;Memory Management&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># For large configurations</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KONFIGO_MAX_MEMORY</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">2G        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Not implemented yet</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KONFIGO_STREAMING_THRESHOLD</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">100M  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Not implemented yet</span></span></code></pre></div><h3 id="processing-limits" tabindex="-1">Processing Limits <a class="header-anchor" href="#processing-limits" aria-label="Permalink to &quot;Processing Limits&quot;">​</a></h3><ul><li><strong>Maximum source files</strong>: No hard limit (limited by system resources)</li><li><strong>Maximum file size</strong>: No hard limit (memory dependent)</li><li><strong>Maximum nesting depth</strong>: 100 levels (prevents infinite recursion)</li><li><strong>Maximum variable substitutions</strong>: 1000 per key (prevents infinite loops)</li></ul><h2 id="security-configuration" tabindex="-1">Security Configuration <a class="header-anchor" href="#security-configuration" aria-label="Permalink to &quot;Security Configuration&quot;">​</a></h2><h3 id="sensitive-data-handling" tabindex="-1">Sensitive Data Handling <a class="header-anchor" href="#sensitive-data-handling" aria-label="Permalink to &quot;Sensitive Data Handling&quot;">​</a></h3><ul><li><strong>Never log sensitive values</strong>: Use <code>-d</code> flag carefully in production</li><li><strong>Environment variable security</strong>: Ensure <code>KONFIGO_KEY_*</code> and <code>KONFIGO_VAR_*</code> are properly secured</li><li><strong>File permissions</strong>: Konfigo respects system file permissions</li><li><strong>Output sanitization</strong>: Sensitive data is not filtered automatically</li></ul><h3 id="best-practices" tabindex="-1">Best Practices <a class="header-anchor" href="#best-practices" aria-label="Permalink to &quot;Best Practices&quot;">​</a></h3><ol><li><p><strong>Use environment variables for secrets</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KONFIGO_VAR_DB_PASSWORD</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$SECRET_PASSWORD</span></span></code></pre></div></li><li><p><strong>Restrict file permissions</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 600</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sensitive-config.yaml</span></span></code></pre></div></li><li><p><strong>Validate input sources</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Use schemas to ensure expected structure</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">konfigo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config.yaml</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> validation-schema.yaml</span></span></code></pre></div></li></ol><h2 id="debugging-configuration" tabindex="-1">Debugging Configuration <a class="header-anchor" href="#debugging-configuration" aria-label="Permalink to &quot;Debugging Configuration&quot;">​</a></h2><h3 id="logging-levels" tabindex="-1">Logging Levels <a class="header-anchor" href="#logging-levels" aria-label="Permalink to &quot;Logging Levels&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Level</th><th>Description</th><th>Output</th></tr></thead><tbody><tr><td>ERROR</td><td>Errors only</td><td>Critical failures</td></tr><tr><td>WARN</td><td>Warnings and errors</td><td>Potential issues</td></tr><tr><td>INFO</td><td>Informational messages</td><td>Processing steps</td></tr><tr><td>DEBUG</td><td>Detailed debug info</td><td>Everything</td></tr></tbody></table><h3 id="debug-output-examples" tabindex="-1">Debug Output Examples <a class="header-anchor" href="#debug-output-examples" aria-label="Permalink to &quot;Debug Output Examples&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Basic verbose output</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">konfigo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config.yaml</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Full debug information</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">konfigo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config1.yaml,config2.yaml</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> schema.yaml</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Specific debug areas</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KONFIGO_DEBUG_MERGE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KONFIGO_DEBUG_SCHEMA</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KONFIGO_DEBUG_VALIDATION</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">true</span></span></code></pre></div><h3 id="common-debug-scenarios" tabindex="-1">Common Debug Scenarios <a class="header-anchor" href="#common-debug-scenarios" aria-label="Permalink to &quot;Common Debug Scenarios&quot;">​</a></h3><ul><li><strong>Merge conflicts</strong>: Use <code>-v</code> to see merge order and precedence</li><li><strong>Schema issues</strong>: Use <code>-d</code> to see variable substitution and validation steps</li><li><strong>File discovery</strong>: Use <code>-v</code> to see which files are found and loaded</li><li><strong>Environment overrides</strong>: Use <code>-d</code> to see which <code>KONFIGO_KEY_*</code> variables are applied</li></ul><p>This configuration reference provides complete control over Konfigo&#39;s behavior for any use case, from simple file merging to complex enterprise configuration management.</p>`,69)]))}const c=i(e,[["render",l]]);export{g as __pageData,c as default};

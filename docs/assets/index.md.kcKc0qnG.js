import{_ as i,c as a,o as t,ae as n}from"./chunks/framework.Bw7rlmih.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{"layout":"home","hero":{"name":"Konfigo","text":"Smart Configuration Management","tagline":"Merge, transform, and validate configurations across any format. One tool, infinite possibilities.","actions":[{"theme":"brand","text":"Get Started in 5 Minutes","link":"/getting-started/quick-start"},{"theme":"alt","text":"View Examples","link":"/guide/recipes"},{"theme":"alt","text":"Explore Schemas","link":"/schema/"}]},"features":[{"icon":"🔄","title":"Universal Format Support","details":"Seamlessly work with JSON, YAML, TOML, and .env files. Convert between formats effortlessly."},{"icon":"🧩","title":"Intelligent Merging","details":"Combine configurations from multiple sources with smart conflict resolution and precedence rules."},{"icon":"⚡","title":"Schema-Powered Processing","details":"Define variables, validate data, transform structures, and generate multiple outputs with flexible schemas."},{"icon":"🌍","title":"Environment Integration","details":"Override any configuration value with environment variables. Perfect for CI/CD and containerized deployments."},{"icon":"🚀","title":"Batch Generation","details":"Generate multiple tailored configuration files from a single source using powerful iteration features."},{"icon":"🛠️","title":"Developer Friendly","details":"Rich CLI, comprehensive validation, detailed error messages, and extensive debugging capabilities."}]},"headers":[],"relativePath":"index.md","filePath":"index.md"}'),s={name:"index.md"};function o(r,e,l,d,c,g){return t(),a("div",null,e[0]||(e[0]=[n(`<h2 id="what-is-konfigo" tabindex="-1">What is Konfigo? <a class="header-anchor" href="#what-is-konfigo" aria-label="Permalink to &quot;What is Konfigo?&quot;">​</a></h2><p>Konfigo is a powerful command-line tool that solves the complexity of modern configuration management. Whether you&#39;re dealing with microservices, multi-environment deployments, or complex application settings, Konfigo provides a unified way to merge, validate, and transform your configurations.</p><h2 id="i-want-to" tabindex="-1">I want to... <a class="header-anchor" href="#i-want-to" aria-label="Permalink to &quot;I want to...&quot;">​</a></h2><div class="quick-paths"><h3 id="🚀-get-started-quickly" tabindex="-1">🚀 <strong>Get started quickly</strong> <a class="header-anchor" href="#🚀-get-started-quickly" aria-label="Permalink to &quot;🚀 **Get started quickly**&quot;">​</a></h3><p>→ <a href="/konfigo/getting-started/quick-start.html">5-minute Quick Start</a><br> Perfect for newcomers who want to see Konfigo in action immediately.</p><h3 id="🔧-solve-a-specific-problem" tabindex="-1">🔧 <strong>Solve a specific problem</strong> <a class="header-anchor" href="#🔧-solve-a-specific-problem" aria-label="Permalink to &quot;🔧 **Solve a specific problem**&quot;">​</a></h3><p>→ <a href="/konfigo/guide/">Common Tasks &amp; Recipes</a><br> Jump straight to solutions for merging, converting, or validating configurations.</p><h3 id="📚-learn-the-concepts" tabindex="-1">📚 <strong>Learn the concepts</strong> <a class="header-anchor" href="#📚-learn-the-concepts" aria-label="Permalink to &quot;📚 **Learn the concepts**&quot;">​</a></h3><p>→ <a href="/konfigo/getting-started/concepts.html">Understanding Konfigo</a><br> Build a solid foundation before diving into advanced features.</p><h3 id="⚡-master-advanced-features" tabindex="-1">⚡ <strong>Master advanced features</strong> <a class="header-anchor" href="#⚡-master-advanced-features" aria-label="Permalink to &quot;⚡ **Master advanced features**&quot;">​</a></h3><p>→ <a href="/konfigo/schema/">Schema Guide</a><br> Unlock the full power of schema-driven configuration processing.</p></div><h2 id="real-world-examples" tabindex="-1">Real-World Examples <a class="header-anchor" href="#real-world-examples" aria-label="Permalink to &quot;Real-World Examples&quot;">​</a></h2><p><strong>Multi-Environment Deployment</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Merge base config with environment-specific overrides</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">konfigo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> base.yaml,prod.yaml</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -of</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config.json</span></span></code></pre></div><p><strong>Configuration Validation</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Validate against schema and generate multiple outputs</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">konfigo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config.yaml</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> schema.yaml</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -V</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> variables.yaml</span></span></code></pre></div><p><strong>Format Conversion</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Convert legacy .env files to modern YAML</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">konfigo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> legacy.env</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -oy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -of</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> modern.yaml</span></span></code></pre></div><hr><h2 id="why-choose-konfigo" tabindex="-1">Why Choose Konfigo? <a class="header-anchor" href="#why-choose-konfigo" aria-label="Permalink to &quot;Why Choose Konfigo?&quot;">​</a></h2><ul><li><strong>🎯 Purpose-Built</strong>: Designed specifically for configuration management challenges</li><li><strong>🔒 Reliable</strong>: Extensive testing with real-world configuration scenarios</li><li><strong>📖 Well-Documented</strong>: Comprehensive guides and examples for every feature</li><li><strong>🌟 Active Development</strong>: Regular updates and community-driven improvements</li></ul><p>Ready to simplify your configuration management? <a href="/konfigo/getting-started/">Get started now</a>!</p><p>Konfigo is a powerful and versatile command-line tool designed to simplify your configuration management workflow. It excels at reading various configuration file formats, merging them intelligently, and then processing the combined data against a user-defined schema. This schema can perform a wide array of operations, including:</p><ul><li><strong>Variable Substitution</strong>: Inject dynamic values from environment variables, dedicated variable files, or even other parts of your configuration.</li><li><strong>Data Generation</strong>: Create new configuration values based on existing data (e.g., concatenating strings).</li><li><strong>Data Transformation</strong>: Modify keys and values (e.g., renaming keys, changing string case, adding prefixes, setting static values).</li><li><strong>Data Validation</strong>: Ensure your configuration adheres to specific rules and constraints (e.g., required fields, data types, numerical ranges, string patterns).</li><li><strong>Batch Processing</strong>: Generate multiple output files from a single schema and a set of iterating variables, perfect for managing configurations across different environments or services.</li></ul><p>Whether you&#39;re dealing with simple JSON files or complex, multi-layered YAML configurations with environment-specific overrides, Konfigo provides the tools to manage them efficiently and reliably.</p><h2 id="key-features" tabindex="-1">Key Features <a class="header-anchor" href="#key-features" aria-label="Permalink to &quot;Key Features&quot;">​</a></h2><ul><li><strong>Multi-Format Support</strong>: Reads JSON, YAML, TOML, and .env files.</li><li><strong>Flexible Merging</strong>: Intelligently merges multiple configuration sources.</li><li><strong>Powerful Schema Processing</strong>: <ul><li>Define variables with clear precedence (environment, vars file, schema defaults).</li><li>Generate new data using <code>concat</code> and other potential generators.</li><li>Transform data structures with operations like <code>renameKey</code>, <code>changeCase</code>, <code>addKeyPrefix</code>, and <code>setValue</code>.</li><li>Validate configurations against a rich set of rules (<code>required</code>, <code>type</code>, <code>min</code>, <code>max</code>, <code>minLength</code>, <code>enum</code>, <code>regex</code>).</li></ul></li><li><strong>Environment Variable Integration</strong>: <ul><li>Override configuration values directly using <code>KONFIGO_KEY_path.to.key=value</code>.</li><li>Supply variables for substitution using <code>KONFIGO_VAR_VARNAME=value</code>.</li></ul></li><li><strong>Batch Output Generation</strong>: Use the <code>konfigo_forEach</code> directive in your variables file to produce multiple tailored configuration outputs from a single run.</li><li><strong>Input/Output Control</strong>: <ul><li>Read from files, directories (recursively), or stdin.</li><li>Output to stdout or specified files.</li><li>Control input and output formats (JSON, YAML, TOML, ENV).</li></ul></li><li><strong>Schema Validation</strong>: Validate input configurations against an <code>inputSchema</code> and filter outputs using an <code>outputSchema</code>.</li><li><strong>Immutability</strong>: Protect specific configuration paths from being overridden during merges using the <code>immutable</code> schema directive.</li><li><strong>Customizable Behavior</strong>: Options for case-sensitivity in key matching, verbose logging, and more.</li></ul><h2 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-label="Permalink to &quot;Getting Started&quot;">​</a></h2><ol><li><strong>Installation</strong>: (Add installation instructions here if available, e.g., <code>go install</code> or binary download links)</li><li><strong>Basic Usage</strong>: <code>konfigo -s source1.yml -s source2.json -of output.yml</code></li><li><strong>Using a Schema</strong>: <code>konfigo -s config.json -S schema.yml -V staging-vars.yml -of staging_config.json</code></li></ol><p>Dive into the <a href="./guide/">Guide</a> to learn more about the CLI and its features, or explore the <a href="./schema/">Schema</a> documentation to unlock the full power of Konfigo&#39;s processing capabilities.</p><hr><h2 id="see-also" tabindex="-1">See Also <a class="header-anchor" href="#see-also" aria-label="Permalink to &quot;See Also&quot;">​</a></h2><ul><li><a href="./getting-started/concepts.html">Core Concepts</a></li><li><a href="./guide/">User Guide</a></li><li><a href="./schema/">Schema Guide</a></li><li><a href="./reference/">Reference</a></li></ul>`,26)]))}const p=i(s,[["render",o]]);export{u as __pageData,p as default};

import{_ as i,c as a,o as e,ae as n}from"./chunks/framework.Bw7rlmih.js";const g=JSON.parse('{"title":"Troubleshooting Guide","description":"","frontmatter":{},"headers":[],"relativePath":"advanced/troubleshooting.md","filePath":"advanced/troubleshooting.md"}'),t={name:"advanced/troubleshooting.md"};function l(o,s,r,h,p,d){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="troubleshooting-guide" tabindex="-1">Troubleshooting Guide <a class="header-anchor" href="#troubleshooting-guide" aria-label="Permalink to &quot;Troubleshooting Guide&quot;">​</a></h1><p>This guide helps you diagnose and resolve common issues when working with Konfigo.</p><h2 id="common-issues-and-solutions" tabindex="-1">Common Issues and Solutions <a class="header-anchor" href="#common-issues-and-solutions" aria-label="Permalink to &quot;Common Issues and Solutions&quot;">​</a></h2><h3 id="file-and-path-issues" tabindex="-1">File and Path Issues <a class="header-anchor" href="#file-and-path-issues" aria-label="Permalink to &quot;File and Path Issues&quot;">​</a></h3><h4 id="file-not-found" tabindex="-1">File Not Found <a class="header-anchor" href="#file-not-found" aria-label="Permalink to &quot;File Not Found&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Error: failed to read file &#39;config.yaml&#39;</span></span></code></pre></div><p><strong>Solutions</strong>:</p><ul><li><strong>Check file path</strong>: Verify the file exists at the specified location</li><li><strong>Use absolute paths</strong>: Try absolute paths if relative paths fail</li><li><strong>Check permissions</strong>: Ensure the file is readable (<code>ls -la config.yaml</code>)</li><li><strong>Verify current directory</strong>: Confirm you&#39;re in the expected working directory</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Debug file access</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -la</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config.yaml</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pwd</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">konfigo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;$(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pwd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)/config.yaml&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Use absolute path</span></span></code></pre></div><h4 id="permission-denied" tabindex="-1">Permission Denied <a class="header-anchor" href="#permission-denied" aria-label="Permalink to &quot;Permission Denied&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Error: permission denied reading &#39;secret-config.yaml&#39;</span></span></code></pre></div><p><strong>Solutions</strong>:</p><ul><li><strong>Fix file permissions</strong>: <code>chmod 644 secret-config.yaml</code></li><li><strong>Check directory permissions</strong>: Ensure parent directories are accessible</li><li><strong>Run with appropriate user</strong>: Switch to a user with proper access</li></ul><h3 id="parsing-and-format-issues" tabindex="-1">Parsing and Format Issues <a class="header-anchor" href="#parsing-and-format-issues" aria-label="Permalink to &quot;Parsing and Format Issues&quot;">​</a></h3><h4 id="yaml-parsing-error" tabindex="-1">YAML Parsing Error <a class="header-anchor" href="#yaml-parsing-error" aria-label="Permalink to &quot;YAML Parsing Error&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Error: failed to parse file &#39;config.yaml&#39;</span></span>
<span class="line"><span>  Caused by: yaml: line 5: found character that cannot start any token</span></span></code></pre></div><p><strong>Solutions</strong>:</p><ul><li><strong>Validate YAML syntax</strong>: Use <code>yamllint config.yaml</code></li><li><strong>Check indentation</strong>: YAML is whitespace-sensitive</li><li><strong>Look for special characters</strong>: Check for tabs, invisible characters</li><li><strong>Verify encoding</strong>: Ensure file is UTF-8 encoded</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Debug YAML issues</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yamllint</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config.yaml</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;import yaml; yaml.safe_load(open(&#39;config.yaml&#39;))&quot;</span></span></code></pre></div><h4 id="json-parsing-error" tabindex="-1">JSON Parsing Error <a class="header-anchor" href="#json-parsing-error" aria-label="Permalink to &quot;JSON Parsing Error&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Error: failed to parse file &#39;config.json&#39;</span></span>
<span class="line"><span>  Caused by: invalid character &#39;}&#39; after object key</span></span></code></pre></div><p><strong>Solutions</strong>:</p><ul><li><strong>Validate JSON syntax</strong>: Use <code>jq . config.json</code></li><li><strong>Check for trailing commas</strong>: JSON doesn&#39;t allow trailing commas</li><li><strong>Verify quotes</strong>: Ensure all strings use double quotes</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Debug JSON issues</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">jq</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config.json</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;import json; json.load(open(&#39;config.json&#39;))&quot;</span></span></code></pre></div><h4 id="format-detection-issues" tabindex="-1">Format Detection Issues <a class="header-anchor" href="#format-detection-issues" aria-label="Permalink to &quot;Format Detection Issues&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Error: unable to determine file format for &#39;data.txt&#39;</span></span></code></pre></div><p><strong>Solutions</strong>:</p><ul><li><strong>Use format flags</strong>: Specify format explicitly (<code>-sj</code>, <code>-sy</code>, <code>-st</code>)</li><li><strong>Check file extension</strong>: Use standard extensions (<code>.json</code>, <code>.yaml</code>, <code>.toml</code>)</li><li><strong>Verify content structure</strong>: Ensure content matches expected format</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Force format detection</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">konfigo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> data.txt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -sy</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Force YAML parsing</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">konfigo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> data.txt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -sj</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Force JSON parsing</span></span></code></pre></div><h3 id="variable-and-schema-issues" tabindex="-1">Variable and Schema Issues <a class="header-anchor" href="#variable-and-schema-issues" aria-label="Permalink to &quot;Variable and Schema Issues&quot;">​</a></h3><h4 id="variable-not-found" tabindex="-1">Variable Not Found <a class="header-anchor" href="#variable-not-found" aria-label="Permalink to &quot;Variable Not Found&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Error: variable &#39;DATABASE_URL&#39; not found</span></span></code></pre></div><p><strong>Solutions</strong>:</p><ul><li><strong>Check variable definition</strong>: Ensure variable is defined in schema or vars file</li><li><strong>Verify environment variables</strong>: Check if env vars are set (<code>env | grep KONFIGO_</code>)</li><li><strong>Check spelling</strong>: Verify variable names match exactly</li><li><strong>Review precedence</strong>: Understand variable resolution order</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Debug variable resolution</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">env</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> KONFIGO_VAR_</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">env</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DATABASE_URL</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">konfigo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config.yaml</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> schema.yaml</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Debug mode shows variable resolution</span></span></code></pre></div><h4 id="schema-validation-failed" tabindex="-1">Schema Validation Failed <a class="header-anchor" href="#schema-validation-failed" aria-label="Permalink to &quot;Schema Validation Failed&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Error: validation failed</span></span>
<span class="line"><span>  Caused by: path &#39;service.port&#39; value 99999 exceeds maximum value 65535</span></span></code></pre></div><p><strong>Solutions</strong>:</p><ul><li><strong>Review validation rules</strong>: Check schema validation constraints</li><li><strong>Verify input data</strong>: Ensure values match expected types and ranges</li><li><strong>Check data source</strong>: Verify which source provides the problematic value</li><li><strong>Use debug mode</strong>: See detailed validation process</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Debug validation</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">konfigo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config.yaml</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> schema.yaml</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Review the specific validation rule causing the issue</span></span></code></pre></div><h4 id="generator-transformer-failures" tabindex="-1">Generator/Transformer Failures <a class="header-anchor" href="#generator-transformer-failures" aria-label="Permalink to &quot;Generator/Transformer Failures&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Error: schema processing failed</span></span>
<span class="line"><span>  Caused by: generator failed: source path &#39;service.hostname&#39; not found</span></span></code></pre></div><p><strong>Solutions</strong>:</p><ul><li><strong>Verify source paths</strong>: Ensure all referenced paths exist in merged configuration</li><li><strong>Check processing order</strong>: Generators run before transformations</li><li><strong>Use debug output</strong>: See intermediate processing results</li><li><strong>Test without schema</strong>: Verify base configuration first</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Debug schema processing step by step</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">konfigo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config.yaml</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                    # Test merging only</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">konfigo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config.yaml</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> minimal-schema.yaml</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Test with simple schema</span></span></code></pre></div><h3 id="environment-variable-issues" tabindex="-1">Environment Variable Issues <a class="header-anchor" href="#environment-variable-issues" aria-label="Permalink to &quot;Environment Variable Issues&quot;">​</a></h3><h4 id="environment-override-not-working" tabindex="-1">Environment Override Not Working <a class="header-anchor" href="#environment-override-not-working" aria-label="Permalink to &quot;Environment Override Not Working&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># KONFIGO_KEY_service.port=9090 not overriding configuration</span></span></code></pre></div><p><strong>Solutions</strong>:</p><ul><li><strong>Check variable format</strong>: Use correct <code>KONFIGO_KEY_</code> prefix</li><li><strong>Verify path syntax</strong>: Use dot notation for nested paths</li><li><strong>Check case sensitivity</strong>: Use <code>-c</code> flag if needed</li><li><strong>Export variables</strong>: Ensure variables are exported</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Debug environment variables</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KONFIGO_KEY_service.port</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9090</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">env</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> KONFIGO_KEY_</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">konfigo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config.yaml</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Verbose mode shows environment processing</span></span></code></pre></div><h4 id="variable-substitution-not-working" tabindex="-1">Variable Substitution Not Working <a class="header-anchor" href="#variable-substitution-not-working" aria-label="Permalink to &quot;Variable Substitution Not Working&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># \${ENVIRONMENT} not being replaced in output</span></span></code></pre></div><p><strong>Solutions</strong>:</p><ul><li><strong>Check variable definition</strong>: Ensure variable is properly defined</li><li><strong>Verify schema processing</strong>: Substitution happens during schema processing</li><li><strong>Use debug mode</strong>: See variable resolution process</li><li><strong>Check syntax</strong>: Ensure <code>\${VAR_NAME}</code> format is correct</li></ul><h3 id="performance-and-memory-issues" tabindex="-1">Performance and Memory Issues <a class="header-anchor" href="#performance-and-memory-issues" aria-label="Permalink to &quot;Performance and Memory Issues&quot;">​</a></h3><h4 id="slow-processing" tabindex="-1">Slow Processing <a class="header-anchor" href="#slow-processing" aria-label="Permalink to &quot;Slow Processing&quot;">​</a></h4><p><strong>Solutions</strong>:</p><ul><li><strong>Profile with debug mode</strong>: Identify bottlenecks</li><li><strong>Reduce complexity</strong>: Simplify schemas or split large files</li><li><strong>Use parallel processing</strong>: Default behavior, but verify</li><li><strong>Check file sizes</strong>: Consider streaming for very large files</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Profile processing time</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">time</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> konfigo -d -s large-config.yaml -S complex-schema.yaml</span></span></code></pre></div><h4 id="memory-issues" tabindex="-1">Memory Issues <a class="header-anchor" href="#memory-issues" aria-label="Permalink to &quot;Memory Issues&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Error: out of memory processing large configuration</span></span></code></pre></div><p><strong>Solutions</strong>:</p><ul><li><strong>Use streaming</strong>: Process large files via stdin</li><li><strong>Split configurations</strong>: Break large files into smaller pieces</li><li><strong>Increase memory limits</strong>: In containerized environments</li><li><strong>Optimize schemas</strong>: Reduce complex transformations</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Use streaming for large files</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> large-config.yaml</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> konfigo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -sy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> schema.yaml</span></span></code></pre></div><h2 id="debug-techniques" tabindex="-1">Debug Techniques <a class="header-anchor" href="#debug-techniques" aria-label="Permalink to &quot;Debug Techniques&quot;">​</a></h2><h3 id="step-by-step-debugging" tabindex="-1">Step-by-Step Debugging <a class="header-anchor" href="#step-by-step-debugging" aria-label="Permalink to &quot;Step-by-Step Debugging&quot;">​</a></h3><ol><li><strong>Test basic merging</strong>:</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">konfigo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> base.yaml,env.yaml</span></span></code></pre></div><ol start="2"><li><strong>Add schema processing</strong>:</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">konfigo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> base.yaml,env.yaml</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> schema.yaml</span></span></code></pre></div><ol start="3"><li><strong>Add variables</strong>:</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">konfigo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> base.yaml,env.yaml</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> schema.yaml</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -V</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vars.yaml</span></span></code></pre></div><h3 id="debug-mode-usage" tabindex="-1">Debug Mode Usage <a class="header-anchor" href="#debug-mode-usage" aria-label="Permalink to &quot;Debug Mode Usage&quot;">​</a></h3><p>Enable detailed logging to understand processing flow:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Enable debug logging</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">konfigo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config.yaml</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> schema.yaml</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Enable info logging (less verbose)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">konfigo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config.yaml</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> schema.yaml</span></span></code></pre></div><h3 id="component-validation" tabindex="-1">Component Validation <a class="header-anchor" href="#component-validation" aria-label="Permalink to &quot;Component Validation&quot;">​</a></h3><p>Validate individual components:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Test YAML syntax</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yamllint</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config.yaml</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Test JSON syntax</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">jq</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config.json</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Test TOML syntax</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toml-test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config.toml</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Check environment variables</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">env</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> KONFIGO_</span></span></code></pre></div><h3 id="output-intermediate-results" tabindex="-1">Output Intermediate Results <a class="header-anchor" href="#output-intermediate-results" aria-label="Permalink to &quot;Output Intermediate Results&quot;">​</a></h3><p>Save intermediate processing results for analysis:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Save merged configuration</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">konfigo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> base.yaml,env.yaml</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -oy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> merged.yaml</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Save after schema processing</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">konfigo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> merged.yaml</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> schema.yaml</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -oy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> processed.yaml</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Compare differences</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">diff</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> merged.yaml</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> processed.yaml</span></span></code></pre></div><h2 id="error-message-reference" tabindex="-1">Error Message Reference <a class="header-anchor" href="#error-message-reference" aria-label="Permalink to &quot;Error Message Reference&quot;">​</a></h2><h3 id="common-error-patterns" tabindex="-1">Common Error Patterns <a class="header-anchor" href="#common-error-patterns" aria-label="Permalink to &quot;Common Error Patterns&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Error Pattern</th><th>Likely Cause</th><th>Solution</th></tr></thead><tbody><tr><td><code>failed to read file</code></td><td>File access issue</td><td>Check path, permissions</td></tr><tr><td><code>failed to parse</code></td><td>Syntax error</td><td>Validate file format</td></tr><tr><td><code>variable not found</code></td><td>Missing variable</td><td>Check definition, environment</td></tr><tr><td><code>validation failed</code></td><td>Schema constraint</td><td>Review validation rules</td></tr><tr><td><code>path not found</code></td><td>Missing configuration</td><td>Check merge results</td></tr><tr><td><code>type mismatch</code></td><td>Incompatible types</td><td>Verify data types</td></tr></tbody></table><h3 id="exit-codes" tabindex="-1">Exit Codes <a class="header-anchor" href="#exit-codes" aria-label="Permalink to &quot;Exit Codes&quot;">​</a></h3><ul><li><strong>0</strong>: Success</li><li><strong>1</strong>: General error (file not found, parsing failed, etc.)</li><li><strong>2</strong>: Validation error</li><li><strong>3</strong>: Schema processing error</li><li><strong>4</strong>: Environment/variable error</li></ul><h2 id="getting-help" tabindex="-1">Getting Help <a class="header-anchor" href="#getting-help" aria-label="Permalink to &quot;Getting Help&quot;">​</a></h2><h3 id="built-in-help" tabindex="-1">Built-in Help <a class="header-anchor" href="#built-in-help" aria-label="Permalink to &quot;Built-in Help&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">konfigo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -h</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Show help message</span></span></code></pre></div><h3 id="verbose-output" tabindex="-1">Verbose Output <a class="header-anchor" href="#verbose-output" aria-label="Permalink to &quot;Verbose Output&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">konfigo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Show processing information</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">konfigo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Show detailed debug information</span></span></code></pre></div><h3 id="community-resources" tabindex="-1">Community Resources <a class="header-anchor" href="#community-resources" aria-label="Permalink to &quot;Community Resources&quot;">​</a></h3><ul><li><strong>GitHub Issues</strong>: Report bugs and get help</li><li><strong>Documentation</strong>: Comprehensive guides and examples</li><li><strong>Discussions</strong>: Community Q&amp;A and best practices</li></ul><h3 id="creating-minimal-reproduction-cases" tabindex="-1">Creating Minimal Reproduction Cases <a class="header-anchor" href="#creating-minimal-reproduction-cases" aria-label="Permalink to &quot;Creating Minimal Reproduction Cases&quot;">​</a></h3><p>When seeking help, create minimal examples:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># minimal-config.yaml</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">service</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">test-app</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8080</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># minimal-schema.yaml  </span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">validate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;service.port&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    rules</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;number&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      max</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">65535</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Minimal command that reproduces the issue</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">konfigo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> minimal-config.yaml</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> minimal-schema.yaml</span></span></code></pre></div><p>Include:</p><ul><li>Exact command used</li><li>Full error message</li><li>Input files (minimal versions)</li><li>Expected vs actual behavior</li><li>Environment details (OS, Konfigo version)</li></ul>`,100)]))}const c=i(t,[["render",l]]);export{g as __pageData,c as default};

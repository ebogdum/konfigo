import{_ as a,c as n,o as i,ae as e}from"./chunks/framework.Bw7rlmih.js";const g=JSON.parse('{"title":"Recursive Discovery","description":"","frontmatter":{},"headers":[],"relativePath":"features/recursive-discovery.md","filePath":"features/recursive-discovery.md"}'),l={name:"features/recursive-discovery.md"};function p(t,s,r,o,c,h){return i(),n("div",null,s[0]||(s[0]=[e(`<h1 id="recursive-discovery" tabindex="-1">Recursive Discovery <a class="header-anchor" href="#recursive-discovery" aria-label="Permalink to &quot;Recursive Discovery&quot;">​</a></h1><p>Konfigo can automatically discover and process configuration files within directory trees using the <code>-r</code> (recursive) flag. This feature is essential for managing complex projects with distributed configuration files.</p><h2 id="basic-recursive-discovery" tabindex="-1">Basic Recursive Discovery <a class="header-anchor" href="#basic-recursive-discovery" aria-label="Permalink to &quot;Basic Recursive Discovery&quot;">​</a></h2><h3 id="enable-recursive-mode" tabindex="-1">Enable Recursive Mode <a class="header-anchor" href="#enable-recursive-mode" aria-label="Permalink to &quot;Enable Recursive Mode&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Recursively discover files in directory</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">konfigo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Recursive discovery with specific file patterns</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">konfigo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/,config/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Combine with other sources</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">konfigo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> base.json,config/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span></span></code></pre></div><h3 id="file-discovery-rules" tabindex="-1">File Discovery Rules <a class="header-anchor" href="#file-discovery-rules" aria-label="Permalink to &quot;File Discovery Rules&quot;">​</a></h3><p>Konfigo automatically discovers files based on supported extensions:</p><ul><li><code>.json</code> - JSON files</li><li><code>.yml</code>, <code>.yaml</code> - YAML files</li><li><code>.toml</code> - TOML files</li><li><code>.env</code> - Environment files</li><li><code>.ini</code> - INI files</li></ul><h3 id="exclusion-patterns" tabindex="-1">Exclusion Patterns <a class="header-anchor" href="#exclusion-patterns" aria-label="Permalink to &quot;Exclusion Patterns&quot;">​</a></h3><p>Files and directories are automatically excluded:</p><ul><li>Hidden files (starting with <code>.</code>)</li><li>Common build directories (<code>node_modules</code>, <code>dist</code>, <code>build</code>, <code>.git</code>)</li><li>Backup files (ending with <code>~</code>, <code>.bak</code>)</li></ul><h2 id="directory-structure-examples" tabindex="-1">Directory Structure Examples <a class="header-anchor" href="#directory-structure-examples" aria-label="Permalink to &quot;Directory Structure Examples&quot;">​</a></h2><p>Based on <code>test/recursive-discovery/</code> test cases:</p><h3 id="project-configuration" tabindex="-1">Project Configuration <a class="header-anchor" href="#project-configuration" aria-label="Permalink to &quot;Project Configuration&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>project/</span></span>
<span class="line"><span>├── base.json                 # Root configuration</span></span>
<span class="line"><span>├── environments/</span></span>
<span class="line"><span>│   ├── development.yml       # Development overrides</span></span>
<span class="line"><span>│   ├── staging.yml          # Staging overrides  </span></span>
<span class="line"><span>│   └── production.yml       # Production overrides</span></span>
<span class="line"><span>├── services/</span></span>
<span class="line"><span>│   ├── api/</span></span>
<span class="line"><span>│   │   ├── config.toml      # API service config</span></span>
<span class="line"><span>│   │   └── secrets.env      # API secrets</span></span>
<span class="line"><span>│   └── database/</span></span>
<span class="line"><span>│       ├── config.yml       # Database config</span></span>
<span class="line"><span>│       └── migrations.json  # Migration settings</span></span>
<span class="line"><span>└── features/</span></span>
<span class="line"><span>    ├── auth.yml            # Authentication config</span></span>
<span class="line"><span>    ├── logging.yml         # Logging config</span></span>
<span class="line"><span>    └── monitoring.toml     # Monitoring config</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Discover all configuration files</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">konfigo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> project/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Files processed in alphabetical order:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># project/base.json</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># project/environments/development.yml</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># project/environments/production.yml  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># project/environments/staging.yml</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># project/features/auth.yml</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># project/features/logging.yml</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># project/features/monitoring.toml</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># project/services/api/config.toml</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># project/services/api/secrets.env</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># project/services/database/config.yml</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># project/services/database/migrations.json</span></span></code></pre></div><h3 id="microservices-configuration" tabindex="-1">Microservices Configuration <a class="header-anchor" href="#microservices-configuration" aria-label="Permalink to &quot;Microservices Configuration&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>services/</span></span>
<span class="line"><span>├── gateway/</span></span>
<span class="line"><span>│   ├── base.yml</span></span>
<span class="line"><span>│   ├── routes.json</span></span>
<span class="line"><span>│   └── environments/</span></span>
<span class="line"><span>│       ├── dev.yml</span></span>
<span class="line"><span>│       └── prod.yml  </span></span>
<span class="line"><span>├── auth-service/</span></span>
<span class="line"><span>│   ├── config.toml</span></span>
<span class="line"><span>│   ├── oauth.yml</span></span>
<span class="line"><span>│   └── providers/</span></span>
<span class="line"><span>│       ├── google.yml</span></span>
<span class="line"><span>│       └── github.yml</span></span>
<span class="line"><span>└── user-service/</span></span>
<span class="line"><span>    ├── config.yml</span></span>
<span class="line"><span>    ├── database.yml</span></span>
<span class="line"><span>    └── cache.yml</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Process all microservice configurations</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">konfigo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> services/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span></span></code></pre></div><h2 id="file-processing-order" tabindex="-1">File Processing Order <a class="header-anchor" href="#file-processing-order" aria-label="Permalink to &quot;File Processing Order&quot;">​</a></h2><p>Files are processed in <strong>alphabetical order</strong> by full path, ensuring deterministic merging:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>config/</span></span>
<span class="line"><span>├── 01-base.yml        # Processed first</span></span>
<span class="line"><span>├── 02-database.yml    # Processed second  </span></span>
<span class="line"><span>├── 99-overrides.yml   # Processed last</span></span>
<span class="line"><span>└── modules/</span></span>
<span class="line"><span>    ├── auth.yml       # Processed after parent directory</span></span>
<span class="line"><span>    └── logging.yml    # Processed last</span></span></code></pre></div><h3 id="controlling-order-with-naming" tabindex="-1">Controlling Order with Naming <a class="header-anchor" href="#controlling-order-with-naming" aria-label="Permalink to &quot;Controlling Order with Naming&quot;">​</a></h3><p>Use prefixes to control processing order:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>config/</span></span>
<span class="line"><span>├── 00-defaults.yml    # Base defaults</span></span>
<span class="line"><span>├── 10-database.yml    # Database configuration</span></span>
<span class="line"><span>├── 20-services.yml    # Service configuration</span></span>
<span class="line"><span>├── 30-features.yml    # Feature toggles</span></span>
<span class="line"><span>└── 99-overrides.yml   # Final overrides</span></span></code></pre></div><h2 id="combining-sources" tabindex="-1">Combining Sources <a class="header-anchor" href="#combining-sources" aria-label="Permalink to &quot;Combining Sources&quot;">​</a></h2><p>Recursive discovery can be combined with explicit file sources:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Explicit base + recursive discovery  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">konfigo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> base.json,config/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Multiple directories with recursive discovery</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">konfigo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> shared/,project-specific/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Mix explicit files and recursive directories</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">konfigo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> global.yml,services/,local-overrides.json</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span></span></code></pre></div><h2 id="real-world-examples" tabindex="-1">Real-World Examples <a class="header-anchor" href="#real-world-examples" aria-label="Permalink to &quot;Real-World Examples&quot;">​</a></h2><h3 id="kubernetes-configuration-management" tabindex="-1">Kubernetes Configuration Management <a class="header-anchor" href="#kubernetes-configuration-management" aria-label="Permalink to &quot;Kubernetes Configuration Management&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>k8s-configs/</span></span>
<span class="line"><span>├── base/</span></span>
<span class="line"><span>│   ├── namespace.yml</span></span>
<span class="line"><span>│   ├── secrets.yml</span></span>
<span class="line"><span>│   └── configmaps.yml</span></span>
<span class="line"><span>├── services/</span></span>
<span class="line"><span>│   ├── frontend/</span></span>
<span class="line"><span>│   │   ├── deployment.yml</span></span>
<span class="line"><span>│   │   ├── service.yml  </span></span>
<span class="line"><span>│   │   └── ingress.yml</span></span>
<span class="line"><span>│   └── backend/</span></span>
<span class="line"><span>│       ├── deployment.yml</span></span>
<span class="line"><span>│       ├── service.yml</span></span>
<span class="line"><span>│       └── database.yml</span></span>
<span class="line"><span>└── environments/</span></span>
<span class="line"><span>    ├── development/</span></span>
<span class="line"><span>    │   ├── resources.yml</span></span>
<span class="line"><span>    │   └── replicas.yml</span></span>
<span class="line"><span>    └── production/</span></span>
<span class="line"><span>        ├── resources.yml</span></span>
<span class="line"><span>        ├── replicas.yml</span></span>
<span class="line"><span>        └── monitoring.yml</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Generate environment-specific configuration</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">konfigo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> k8s-configs/base/,k8s-configs/services/,k8s-configs/environments/production/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span></span></code></pre></div><h3 id="application-configuration" tabindex="-1">Application Configuration <a class="header-anchor" href="#application-configuration" aria-label="Permalink to &quot;Application Configuration&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>config/</span></span>
<span class="line"><span>├── defaults/</span></span>
<span class="line"><span>│   ├── logging.yml</span></span>
<span class="line"><span>│   ├── database.yml  </span></span>
<span class="line"><span>│   └── security.yml</span></span>
<span class="line"><span>├── features/</span></span>
<span class="line"><span>│   ├── payments/</span></span>
<span class="line"><span>│   │   ├── stripe.yml</span></span>
<span class="line"><span>│   │   └── paypal.yml</span></span>
<span class="line"><span>│   ├── auth/</span></span>
<span class="line"><span>│   │   ├── oauth.yml</span></span>
<span class="line"><span>│   │   └── saml.yml</span></span>
<span class="line"><span>│   └── notifications/</span></span>
<span class="line"><span>│       ├── email.yml</span></span>
<span class="line"><span>│       └── sms.yml</span></span>
<span class="line"><span>├── environments/</span></span>
<span class="line"><span>│   ├── local.yml</span></span>
<span class="line"><span>│   ├── staging.yml</span></span>
<span class="line"><span>│   └── production.yml</span></span>
<span class="line"><span>└── overrides/</span></span>
<span class="line"><span>    └── local-dev.yml</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Development environment</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">konfigo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config/defaults/,config/features/,config/environments/local.yml,config/overrides/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Production environment  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">konfigo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config/defaults/,config/features/,config/environments/production.yml</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span></span></code></pre></div><h2 id="error-handling" tabindex="-1">Error Handling <a class="header-anchor" href="#error-handling" aria-label="Permalink to &quot;Error Handling&quot;">​</a></h2><h3 id="directory-not-found" tabindex="-1">Directory Not Found <a class="header-anchor" href="#directory-not-found" aria-label="Permalink to &quot;Directory Not Found&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">konfigo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> missing-directory/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Error: failed to stat path missing-directory/: no such file or directory</span></span></code></pre></div><h3 id="permission-denied" tabindex="-1">Permission Denied <a class="header-anchor" href="#permission-denied" aria-label="Permalink to &quot;Permission Denied&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">konfigo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /root/config/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Warning: Cannot access /root/config/secret.yml: permission denied</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Processing continues with accessible files</span></span></code></pre></div><h3 id="parse-errors" tabindex="-1">Parse Errors <a class="header-anchor" href="#parse-errors" aria-label="Permalink to &quot;Parse Errors&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">konfigo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Warning: Skipping file config/invalid.yml due to parse error: invalid YAML syntax</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Processing continues with remaining files</span></span></code></pre></div><h2 id="performance-considerations" tabindex="-1">Performance Considerations <a class="header-anchor" href="#performance-considerations" aria-label="Permalink to &quot;Performance Considerations&quot;">​</a></h2><h3 id="large-directory-trees" tabindex="-1">Large Directory Trees <a class="header-anchor" href="#large-directory-trees" aria-label="Permalink to &quot;Large Directory Trees&quot;">​</a></h3><ul><li>Recursive discovery scans entire directory trees</li><li>Consider using specific subdirectories for better performance</li><li>Use explicit file lists for large projects when possible</li></ul><h3 id="file-system-optimization" tabindex="-1">File System Optimization <a class="header-anchor" href="#file-system-optimization" aria-label="Permalink to &quot;File System Optimization&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># More specific paths for better performance</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">konfigo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config/core/,config/env/production/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Instead of scanning everything</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">konfigo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span></span></code></pre></div><h2 id="best-practices" tabindex="-1">Best Practices <a class="header-anchor" href="#best-practices" aria-label="Permalink to &quot;Best Practices&quot;">​</a></h2><h3 id="directory-organization" tabindex="-1">Directory Organization <a class="header-anchor" href="#directory-organization" aria-label="Permalink to &quot;Directory Organization&quot;">​</a></h3><ol><li><strong>Hierarchical Structure</strong>: Organize configs by logical groupings</li><li><strong>Naming Conventions</strong>: Use prefixes to control merge order</li><li><strong>Environment Separation</strong>: Keep environment-specific configs in subdirectories</li><li><strong>Feature Isolation</strong>: Group related configurations together</li></ol><h3 id="file-naming" tabindex="-1">File Naming <a class="header-anchor" href="#file-naming" aria-label="Permalink to &quot;File Naming&quot;">​</a></h3><ol><li><strong>Descriptive Names</strong>: Use clear, descriptive filenames</li><li><strong>Order Prefixes</strong>: Use numeric prefixes when order matters</li><li><strong>Consistent Extensions</strong>: Use appropriate file extensions for auto-detection</li><li><strong>Avoid Conflicts</strong>: Don&#39;t use conflicting names across directories</li></ol><h3 id="project-structure-examples" tabindex="-1">Project Structure Examples <a class="header-anchor" href="#project-structure-examples" aria-label="Permalink to &quot;Project Structure Examples&quot;">​</a></h3><h4 id="clean-architecture" tabindex="-1">Clean Architecture <a class="header-anchor" href="#clean-architecture" aria-label="Permalink to &quot;Clean Architecture&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>config/</span></span>
<span class="line"><span>├── 00-base/           # Foundation configuration</span></span>
<span class="line"><span>├── 10-infrastructure/ # Database, cache, queues</span></span>
<span class="line"><span>├── 20-services/      # Business logic services  </span></span>
<span class="line"><span>├── 30-features/      # Feature-specific config</span></span>
<span class="line"><span>├── 40-integrations/  # External service config</span></span>
<span class="line"><span>└── 99-environment/   # Environment overrides</span></span></code></pre></div><h4 id="domain-driven-design" tabindex="-1">Domain-Driven Design <a class="header-anchor" href="#domain-driven-design" aria-label="Permalink to &quot;Domain-Driven Design&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>config/</span></span>
<span class="line"><span>├── shared/           # Cross-cutting concerns</span></span>
<span class="line"><span>├── user-domain/      # User management</span></span>
<span class="line"><span>├── order-domain/     # Order processing</span></span>
<span class="line"><span>├── payment-domain/   # Payment handling</span></span>
<span class="line"><span>└── notification-domain/ # Notifications</span></span></code></pre></div><h4 id="microservices" tabindex="-1">Microservices <a class="header-anchor" href="#microservices" aria-label="Permalink to &quot;Microservices&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>config/</span></span>
<span class="line"><span>├── infrastructure/   # Shared infrastructure</span></span>
<span class="line"><span>├── gateway/         # API gateway config</span></span>
<span class="line"><span>├── services/        # Individual service configs</span></span>
<span class="line"><span>│   ├── user-service/</span></span>
<span class="line"><span>│   ├── order-service/</span></span>
<span class="line"><span>│   └── payment-service/</span></span>
<span class="line"><span>└── environments/    # Environment-specific</span></span>
<span class="line"><span>    ├── development/</span></span>
<span class="line"><span>    ├── staging/</span></span>
<span class="line"><span>    └── production/</span></span></code></pre></div><h2 id="integration-with-other-features" tabindex="-1">Integration with Other Features <a class="header-anchor" href="#integration-with-other-features" aria-label="Permalink to &quot;Integration with Other Features&quot;">​</a></h2><h3 id="schema-processing" tabindex="-1">Schema Processing <a class="header-anchor" href="#schema-processing" aria-label="Permalink to &quot;Schema Processing&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Recursive discovery with schema processing</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">konfigo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> schema.yml</span></span></code></pre></div><h3 id="environment-variables" tabindex="-1">Environment Variables <a class="header-anchor" href="#environment-variables" aria-label="Permalink to &quot;Environment Variables&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Combine recursive discovery with environment overrides</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KONFIGO_KEY_environment</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">production</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">konfigo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span></span></code></pre></div><h3 id="output-generation" tabindex="-1">Output Generation <a class="header-anchor" href="#output-generation" aria-label="Permalink to &quot;Output Generation&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Process recursively and output to file</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">konfigo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -of</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> final-config.json</span></span></code></pre></div><h2 id="test-coverage" tabindex="-1">Test Coverage <a class="header-anchor" href="#test-coverage" aria-label="Permalink to &quot;Test Coverage&quot;">​</a></h2><p>Recursive discovery is tested comprehensively in <code>test/recursive-discovery/</code>:</p><ul><li>Multiple directory levels</li><li>Mixed file formats</li><li>File processing order verification</li><li>Error condition handling</li><li>Integration with merging logic</li><li>Performance with large directory trees</li></ul>`,69)]))}const k=a(l,[["render",p]]);export{g as __pageData,k as default};
